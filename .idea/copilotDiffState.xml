<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/main/java/com/bicitienda/bikeserviceapp/controller/LoginController.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/bicitienda/bikeserviceapp/controller/LoginController.java" />
              <option name="originalContent" value="package com.bicitienda.bikeserviceapp.controller;&#10;&#10;import com.bicitienda.bikeserviceapp.model.ConexionDB;&#10;import javafx.fxml.FXML;&#10;import javafx.fxml.FXMLLoader;&#10;import javafx.scene.Scene;&#10;import javafx.scene.control.*;&#10;import javafx.stage.Stage;&#10;&#10;import java.sql.Connection;&#10;import java.sql.PreparedStatement;&#10;import java.sql.ResultSet;&#10;&#10;public class LoginController {&#10;&#10;    @FXML&#10;    private TextField txtUsuario;&#10;    @FXML&#10;    private PasswordField txtContrasena;&#10;    @FXML&#10;    private Label lblMensaje;&#10;&#10;    @FXML&#10;    protected void onLogin() {&#10;        String usuario = txtUsuario.getText();&#10;        String contrasena = txtContrasena.getText();&#10;&#10;        if (usuario.isEmpty() || contrasena.isEmpty()) {&#10;            lblMensaje.setText(&quot;Por favor ingresa usuario y contraseña&quot;);&#10;            return;&#10;        }&#10;&#10;        try (Connection conn = ConexionDB.conectar()) {&#10;            String sql = &quot;SELECT rol FROM usuarios WHERE usuario = ? AND contrasena = ?&quot;;&#10;            PreparedStatement stmt = conn.prepareStatement(sql);&#10;            stmt.setString(1, usuario);&#10;            stmt.setString(2, contrasena);&#10;            ResultSet rs = stmt.executeQuery();&#10;&#10;            if (rs.next()) {&#10;                String rol = rs.getString(&quot;rol&quot;);&#10;                abrirVentanaServicios(usuario, rol);&#10;&#10;                // Cierra la ventana de login&#10;                Stage stage = (Stage) txtUsuario.getScene().getWindow();&#10;                stage.close();&#10;&#10;            } else {&#10;                lblMensaje.setText(&quot;Usuario o contraseña incorrectos&quot;);&#10;            }&#10;&#10;        } catch (Exception e) {&#10;            e.printStackTrace();&#10;            lblMensaje.setText(&quot;Error de conexión con la base de datos&quot;);&#10;        }&#10;    }&#10;&#10;    private void abrirVentanaServicios(String usuario, String rol) throws Exception {&#10;        FXMLLoader loader = new FXMLLoader(getClass().getResource(&quot;/com/bicitienda/bikeserviceapp/servicio-view.fxml&quot;));&#10;        Scene scene = new Scene(loader.load());&#10;&#10;        ServiciosController controller = loader.getController();&#10;        controller.setDatosUsuario(usuario, rol);&#10;&#10;        Stage stage = new Stage();&#10;        stage.setTitle(&quot;BikeService - Panel de &quot; + rol);&#10;        stage.setScene(scene);&#10;        stage.show();&#10;    }&#10;&#10;&#10;&#10;&#10;&#10;&#10;}&#10;" />
              <option name="updatedContent" value="package com.bicitienda.bikeserviceapp.controller;&#10;&#10;import com.bicitienda.bikeserviceapp.model.ConexionDB;&#10;import javafx.fxml.FXML;&#10;import javafx.fxml.FXMLLoader;&#10;import javafx.scene.Scene;&#10;import javafx.scene.control.*;&#10;import javafx.stage.Stage;&#10;&#10;import java.sql.Connection;&#10;import java.sql.PreparedStatement;&#10;import java.sql.ResultSet;&#10;import java.net.URL;&#10;import java.util.logging.Level;&#10;import java.util.logging.Logger;&#10;&#10;public class LoginController {&#10;&#10;    private static final Logger LOGGER = Logger.getLogger(LoginController.class.getName());&#10;&#10;    @FXML&#10;    private TextField txtUsuario;&#10;    @FXML&#10;    private PasswordField txtContrasena;&#10;    @FXML&#10;    private Label lblMensaje;&#10;&#10;    @FXML&#10;    protected void onLogin() {&#10;        String usuario = txtUsuario.getText();&#10;        String contrasena = txtContrasena.getText();&#10;&#10;        if (usuario == null || usuario.isEmpty() || contrasena == null || contrasena.isEmpty()) {&#10;            lblMensaje.setText(&quot;Por favor ingresa usuario y contraseña&quot;);&#10;            return;&#10;        }&#10;&#10;        String sql = &quot;SELECT rol FROM usuarios WHERE usuario = ? AND contrasena = ?&quot;;&#10;&#10;        try (Connection conn = ConexionDB.conectar();&#10;             PreparedStatement stmt = conn.prepareStatement(sql)) {&#10;&#10;            stmt.setString(1, usuario);&#10;            stmt.setString(2, contrasena);&#10;&#10;            try (ResultSet rs = stmt.executeQuery()) {&#10;                if (rs.next()) {&#10;                    String rol = rs.getString(&quot;rol&quot;);&#10;                    abrirVentanaServicios(usuario, rol);&#10;&#10;                    // Cierra la ventana de login&#10;                    Stage stage = (Stage) txtUsuario.getScene().getWindow();&#10;                    stage.close();&#10;&#10;                } else {&#10;                    lblMensaje.setText(&quot;Usuario o contraseña incorrectos&quot;);&#10;                }&#10;            }&#10;&#10;        } catch (Exception e) {&#10;            LOGGER.log(Level.SEVERE, &quot;Error al conectar o consultar la base de datos&quot;, e);&#10;            lblMensaje.setText(&quot;Error de conexión con la base de datos&quot;);&#10;        }&#10;    }&#10;&#10;    private void abrirVentanaServicios(String usuario, String rol) throws Exception {&#10;        // Verificar que el recurso FXML existe antes de cargar&#10;        URL fxmlUrl = getClass().getResource(&quot;/com/bicitienda/bikeserviceapp/servicio-view.fxml&quot;);&#10;        if (fxmlUrl == null) {&#10;            LOGGER.severe(&quot;FXML de servicios no encontrado en /com/bicitienda/bikeserviceapp/servicio-view.fxml&quot;);&#10;            throw new IllegalStateException(&quot;Vista de servicios no encontrada&quot;);&#10;        }&#10;        FXMLLoader loader = new FXMLLoader(fxmlUrl);&#10;        Scene scene = new Scene(loader.load());&#10;&#10;        ServiciosController controller = loader.getController();&#10;        controller.setDatosUsuario(usuario, rol);&#10;&#10;        Stage stage = new Stage();&#10;        stage.setTitle(&quot;BikeService - Panel de &quot; + rol);&#10;        stage.setScene(scene);&#10;        stage.show();&#10;    }&#10;&#10;&#10;&#10;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>